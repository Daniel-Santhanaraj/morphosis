{"version":3,"sources":["components/Products.js","components/Cart.js","App.js","index.js"],"names":["Products","props","useState","data","prod","setProd","mcart","setMcart","search","setSearch","filterProduct","setFilterProduct","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","updateStock","product","stock","allprod","index","findIndex","x","name","getProducts","productFilter","filteredData","filter","item","material","toLowerCase","className","type","placeholder","onChange","e","target","value","onKeyDown","key","_handleKeyDown","onBlur","onClick","map","i","src","img","image","split","alt","price","createdAt","mcartdata","push","unique","Map","values","getUniqueRobot","getCart","splice","val","alert","addCart","Cart","cartData","setCartData","setPrice","amount","setAmount","uniqueData","setUniqueData","allProducts","priceData","reduce","total","parseFloat","actual_stock","amountData","useEffect","robots","toFixed","stockVal","result","counter","action","readOnly","App","loader","setLoader","products","setProducts","cart","setCart","uniqueRobot","setUniqueRobot","active","setActive","arrow","setArrow","axios","get","then","res","catch","error","console","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e0d67e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Products = (props) => {\r\n    const [prod, setProd] = useState(props.data);\r\n    const [mcart, setMcart] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [filterProduct, setFilterProduct] = useState(props.data);\r\n\r\n    /*date format*/\r\n    const formatDate = (date) => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [day, month, year].join('-');\r\n    }\r\n\r\n    /*Image size render*/\r\n    const img = (img) => {\r\n        return img.split(\"?\")[0]\r\n    }\r\n\r\n    /* Stock update */\r\n    const updateStock = (product) => {\r\n        if(product['actual_stock'] == null ) {\r\n            product['actual_stock'] = product.stock;\r\n        }\r\n        product.stock = product.stock - 1;\r\n        let allprod = [...prod];\r\n        //allprod[i] = product;\r\n        let index = allprod.findIndex( x => x.name === product.name );\r\n        allprod[index] = product;\r\n        setProd(allprod);                 \r\n        props.getProducts(prod);\r\n    }\r\n\r\n    const addCart = (product, i) => {\r\n        let mcartdata = mcart;\r\n        mcartdata.push(product);\r\n        const unique = [...new Map(mcartdata.map((item) => [item[\"name\"], item])).values()];  \r\n        \r\n        if(unique.length <= 5) {\r\n            //Unique products\r\n            props.getUniqueRobot(unique);\r\n            \r\n            //Stock update\r\n            updateStock(product);\r\n            \r\n            //Selected products            \r\n            setMcart(mcartdata);\r\n            props.getCart(mcart);\r\n        } else {\r\n            mcartdata.splice(-1);\r\n            unique.splice(-1);\r\n            if (unique.filter(val => val.name === product.name).length > 0) {\r\n                updateStock(product);\r\n            } else {\r\n                alert(\"Maximum limit exceeded\");\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    const productFilter = () => {\r\n        setFilterProduct(prod);\r\n        if(search != '') {           \r\n            const filteredData = [...prod].filter((item) => {\r\n                return (item.material.toLowerCase() === search.toLowerCase());                \r\n            })\r\n            setFilterProduct(filteredData);\r\n        }\r\n    }\r\n    \r\n        \r\n    const _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            productFilter();\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div className=\"products\">\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">Robot Market</h1>\r\n                <div>\r\n                    <input type=\"text\" className=\"input\" placeholder=\"Search by material\" onChange={ (e) => setSearch(e.target.value)} onKeyDown={(e) => _handleKeyDown(e)} onBlur={(e) => productFilter()}/>\r\n                    <button type=\"button\" onClick={() => { productFilter()} }>Search</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                (filterProduct.length > 0) ?\r\n                <div className=\"grid\">\r\n                    {\r\n                        filterProduct.map((product, i) => {\r\n                            return (\r\n                                <div className=\"cardDiv\" key={i}>\r\n                                    <div className=\"card\">\r\n                                        <img src={`${img(product.image)}?size=240x240`} alt=\"img\" />\r\n                                        <h3>{product.name}</h3>\r\n                                        <span className=\"material\">{product.material}</span>\r\n                                        <h4>&#3647; {product.price}</h4>\r\n                                        <div className=\"additional\">\r\n                                            <span className=\"stock\"> In stock: {product.stock}</span>\r\n                                            <span className=\"date\">Created at: {formatDate(product.createdAt)}</span> \r\n                                        </div>\r\n                                        <button className={(product.stock > 0) ? `active` : 'inactive'} onClick={() => (product.stock > 0) ? addCart(product, i) : null  }>add to cart</button>                            \r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                : <h3 className=\"empty\">No Data</h3>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products;","import React, {useState, useEffect} from 'react';\r\nimport Products from './Products';\r\n\r\nconst Cart = (props) => {\r\n    const [cartData, setCartData] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [uniqueData, setUniqueData] = useState([]);\r\n    const [allProducts, setAllProducts] = useState(props.data);\r\n\r\n    const priceData = uniqueData.reduce((total, product) => {\r\n        total= total + parseFloat(product.price) * (product.actual_stock - product.stock)\r\n        return total;\r\n    }, 0.00);\r\n\r\n    const amountData = uniqueData.reduce((total, product) => {\r\n        total= total + (product.actual_stock - product.stock)\r\n        return total;\r\n    }, 0);\r\n\r\n    useEffect(() => {\r\n        setCartData(props.robots); \r\n        setUniqueData(props.unique); \r\n        setPrice(priceData.toFixed(2));  \r\n        setAmount(amountData);  \r\n    }, [props, cartData, uniqueData]); \r\n    \r\n    const img = (img) => {\r\n        return img.split(\"?\")[0]\r\n    }\r\n\r\n    let stockVal = (data) => {\r\n        const result = data.actual_stock - data.stock;\r\n        return (result != 0) ? result : 0;\r\n    }\r\n\r\n    let counter = (val, action) => {\r\n        let result = [...allProducts].map((prod, i) => {\r\n                        if(prod.name == val.name) {\r\n                            if(prod.stock != 0 && action == 'inc') {                \r\n                                prod.stock = prod.stock - 1;\r\n                            } else if(prod.stock < prod.actual_stock-1 && action == 'dec') { \r\n                                prod.stock = prod.stock + 1;\r\n                            }  else {\r\n                                return false;\r\n                            }              \r\n                        }\r\n                        return prod;\r\n                    })\r\n        props.getProducts(result);\r\n    }\r\n\r\n    return (   \r\n        <div className=\"cartArea\">\r\n            <h1 className=\"title\">Cart ({amount})</h1>\r\n            {\r\n            (uniqueData.length > 0 ) ?\r\n            <div>                \r\n                <ul>\r\n                    {\r\n                        uniqueData.map((data, i) => {\r\n                            return(\r\n                                <li key={i}>\r\n                                    <img src={`${img(data.image)}?size=240x240`} alt=\"img\" />\r\n                                    <h3>{data.name}</h3>\r\n                                    <div className=\"quantity\">\r\n                                        <b className=\"quantity__minus\" onClick={() => counter(data, 'dec')}><span>-</span></b>\r\n                                        <input name=\"quantity\" type=\"text\" className=\"quantity__input\" value={stockVal(data)} readOnly/>\r\n                                        <b className=\"quantity__plus\" onClick={() => counter(data, 'inc')}><span>+</span></b>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </ul>\r\n                <div className=\"summary\">\r\n                    <h3>Total Amount: {amount}</h3>\r\n                    <h3>Total Price: &#3647; {price}</h3>\r\n                </div>\r\n            </div>\r\n            : <h3 className=\"empty\">Cart is empty!</h3>\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React, {useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport './App.scss';\r\nimport Products from './components/Products';\r\nimport Cart from './components/Cart';\r\n\r\nfunction App() {\r\n  \r\n  const [loader, setLoader ] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [uniqueRobot, setUniqueRobot] = useState([]);\r\n  const [active, setActive] = useState('inactive');\r\n  const [arrow, setArrow] = useState('up');\r\n  \r\n  //const url = 'http://localhost:8000/api/robots';\r\n  const url = 'https://santaz.biz/morphosis/data.json';\r\n  useEffect(() => {\r\n    axios.get(url).then((res) => {\r\n      setProducts(res.data.data);\r\n      setLoader(false);\r\n    }).catch( error => console.error(`error ${error}`));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (arrow == 'up') ? setActive('inactive') : setActive('active');  \r\n  }, [arrow])\r\n  let cartShow = () => {\r\n    (arrow == 'up') ? setArrow('down') : setArrow('up');    \r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"body-wrap\">\r\n        <div className=\"container\">\r\n        { (!loader) ?\r\n        <div className=\"row\">\r\n          <div className=\"col-9 padding15\">\r\n            <Products data={products} \r\n            getCart={ product => setCart(product) } \r\n            getProducts={data => setProducts(data)} \r\n            getUniqueRobot = { data => setUniqueRobot(data) }/>\r\n          </div>\r\n          <div className={`col-3 padding15 cartFixed ${active}`}>\r\n            <span className={`arrow ${arrow}`} onClick={() => cartShow()}></span>\r\n            <Cart robots={cart} unique = {uniqueRobot} data={products} getProducts={data => setProducts(data)}  />\r\n          </div>\r\n        </div>\r\n        \r\n        :\r\n        <div className=\"lds-roller loader\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}